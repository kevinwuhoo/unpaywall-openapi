openapi: 3.1.1
info:
  title: Unpaywall REST API
  version: v2
  description: The REST API gives anyone free, programmatic access to the Unpaywall database.
  contact:
    name: Unpaywall Team
    url: https://unpaywall.org/
    email: support@unpaywall.org
servers:
  - url: https://api.unpaywall.org/v2

paths:
  /{doi}:
    get:
      summary: Gets OA status and bibliographic info for a given DOI-assigned resource.
      parameters:
        - in: path
          name: doi
          required: true
          schema:
            type: string
          description: A valid DOI.
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: Your email address for authentication.
      responses:
        "200":
          description: Successfully retrieved the DOI information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DOISchema"
  /search:
    get:
      summary: Provides the full GET /v2/:doi responses for articles whose titles match your query.
      parameters:
        - in: query
          name: query
          required: true
          schema:
            type: string
          description: The text to search for. Search terms are separated by whitespace and are AND-ed together by default. The title must contain all search terms to be matched.
        - in: query
          name: is_oa
          required: false
          schema:
            type: boolean
          description: A boolean value indicating whether the returned records should be Open Access or not.
        - in: query
          name: page
          required: false
          schema:
            type: integer
          description: An integer indicating which page of results should be returned. Default is 1, returning results 1 to 50.
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: Your email address for authentication.
      responses:
        "200":
          description: Successfully retrieved the search results.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SearchResult"

components:
  schemas:
    DOISchema:
      type: object
      properties:
        best_oa_location:
          $ref: "#/components/schemas/OALocation"
          nullable: true
          description: The best OA Location Object we could find for this DOI. The "best" location is determined using an algorithm that prioritizes publisher-hosted content first (eg Hybrid or Gold), then prioritizes versions closer to the version of record (PublishedVersion over AcceptedVersion), then more authoritative repositories (PubMed Central over CiteSeerX). Returns null if we couldn't find any OA Locations.
        data_standard:
          type: integer
          description: Indicates the data collection approaches used for this resource. Possible values are 1 (First-generation hybrid detection) and 2 (Second-generation hybrid detection).
        doi:
          type: string
          description: The DOI of this resource. This is always lowercase.
        doi_url:
          type: string
          description: The DOI in hyperlink form. This field simply contains "https://doi.org/" prepended to the doi field. It expresses the DOI in its correct format according to the Crossref DOI display guidelines.
        genre:
          type: string
          nullable: true
          description: The type of resource. Currently the genre is identical to the Crossref-reported type of a given resource. The "journal-article" type is most common, but there are many others.
        is_paratext:
          type: boolean
          description: Is the item an ancillary part of a journal, like a table of contents? See here for more information on how we determine whether an article is paratext.
        is_oa:
          type: boolean
          description: Is there an OA copy of this resource. Convenience attribute; returns true when best_oa_location is not null.
        journal_is_in_doaj:
          type: boolean
          description: Is this resource published in a DOAJ-indexed journal. Useful for defining whether a resource is Gold OA (depending on your definition, see also journal_is_oa).
        journal_is_oa:
          type: boolean
          description: Is this resource published in a completely OA journal. Useful for defining whether a resource is Gold OA. Includes any fully-OA journal, regardless of inclusion in DOAJ. This includes journals by all-OA publishers and journals that would otherwise be all Hybrid or Bronze OA.
        journal_issns:
          type: string
          nullable: true
          description: Any ISSNs assigned to the journal publishing this resource. Separate ISSNs are sometimes assigned to print and electronic versions of the same journal. If there are multiple ISSNs, they are separated by commas.
        journal_issn_l:
          type: string
          nullable: true
          description: A single ISSN for the journal publishing this resource. An ISSN-L can be used as a primary key for a journal when more than one ISSN is assigned to it. Resources' journal_issns are mapped to ISSN-Ls using the issn.org table, with some manual corrections.
        journal_name:
          type: string
          nullable: true
          description: The name of the journal publishing this resource. The same journal may have multiple name strings (eg, "J. Foo", "Journal of Foo", "JOURNAL OF FOO", etc). These have not been fully normalized within our database, so use with care.
        oa_locations:
          type: array
          items:
            $ref: "#/components/schemas/OALocation"
          description: List of all the OA Location objects associated with this resource. This list is unnecessary for the vast majority of use-cases, since you probably just want the best_oa_location. It's included primarily for research purposes.
        oa_locations_embargoed:
          type: array
          items:
            $ref: "#/components/schemas/OALocation"
          description: List of OA Location objects associated with this resource that are not yet available. This list includes locations that we expect to be available in the future based on information like license metadata and journals' delayed OA policies. They do not affect the resource's oa_status and cannot be the best_oa_location or first_oa_location.
        first_oa_location:
          $ref: "#/components/schemas/OALocation"
          nullable: true
          description: The OA Location Object with the earliest oa_date. Returns null if we couldn't find any OA Locations.
        # !!
        oa_status:
          type: string
          description: >
            The OA status, or color, of this resource. Classifies OA resources by location and license terms as one of: gold, hybrid, bronze, green or closed. See here for more information on how we assign an oa_status.
        has_repository_copy:
          type: boolean
          description: Whether there is a copy of this resource in a repository. True if this resource has at least one OA Location with host_type = "repository". False otherwise.
        published_date:
          type: string
          format: date
          nullable: true
          description: The date this resource was published. As reported by the publishers, who unfortunately have inconsistent definitions of what counts as officially "published." Returned as an ISO8601-formatted timestamp, generally with only year-month-day.
        publisher:
          type: string
          nullable: true
          description: The name of this resource's publisher. Keep in mind that publisher name strings change over time, particularly as publishers are acquired or split up.
        title:
          type: string
          nullable: true
          description: The title of this resource. It's the title. Pretty straightforward.
        updated:
          type: string
          format: date-time
          description: Time when the data for this resource was last updated. Returned as an ISO8601-formatted timestamp.
        year:
          type: integer
          nullable: true
          description: The year this resource was published. Just the year part of the published_date.
        z_authors:
          type: array
          items:
            $ref: "#/components/schemas/CrossrefContributor"
          description: The authors of this resource. These are formatted as a list of Crossref Contributor objects, which are described in the Crossref API docs.

    OALocation:
      type: object
      properties:
        evidence:
          type: string
          description: >
            How we found this OA location. Used for debugging. Don't depend on the exact contents of this for anything, because values are subject to change without warning. Example values: oa journal (via journal title in doaj) We found the name of the journal that publishes this article in the DOAJ database.  oa repository (via pmcid lookup) We found this article in an index of PubMed Central articles.
        host_type:
          type: string
          enum: [publisher, repository]
          description: >
            The type of host that serves this OA location. There are two possible values: publisher means this location is served by the article's publisher (in practice, this usually means it is hosted on the same domain the DOI resolves to). repository means this location is served by an Open Access repository. Preprint servers are considered repositories even if the DOI resolves there.
        is_best:
          type: boolean
          description: Is this location the best_oa_location for its resource. See the DOI object's best_oa_location description for more on how we select which location is "best."
        license:
          type: string
          nullable: true
          description: >
            The license under which this copy is published. We return several types of licenses: Creative Commons licenses are uniformly abbreviated and lowercased. Example: cc-by-nc Publisher-specific licenses are normalized using this format: acs-specific: authorchoice/editors choice usage agreement When we have evidence that an OA license of some kind was used, but it's not reported directly on the webpage at this location, this field returns implied-oa If we are unable to determine a license, or it's not an OA license, this field is null.
        oa_date:
          type: string
          nullable: true
          description: When this document first became available at this location. oa_date is calculated differently for different host types and is not available for all oa_locations. See https://support.unpaywall.org/a/solutions/articles/44002063719 for details.
        pmh_id:
          type: string
          nullable: true
          description: OAI-PMH endpoint where we found this location.	This is primarily for internal debugging. It's null for locations that weren't found using OAI-PMH.
        updated:
          type: string
          format: date-time
          description: >
            Time when the data for this location was last updated.	Returned as an ISO8601-formatted timestamp. Example: 2017-08-17T23:43:27.753663
        url:
          type: string
          description: The url_for_pdf if there is one; otherwise landing page URL.	When we can't find a url_for_pdf (or there isn't one), this field uses the url_for_landing_page, which is a useful fallback for some use cases.
        url_for_landing_page:
          type: string
          description: The URL for a landing page describing this OA copy. When the host_type is "publisher" the landing page usually includes HTML fulltext.
        url_for_pdf:
          type: string
          nullable: true
          description: The URL with a PDF version of this OA copy. Pretty much what it says.
        version:
          type: string
          description: >
            The content version accessible at this location.	We use the DRIVER Guidelines v2.0 VERSION standard to define versions of a given article; see those docs for complete definitions of terms. Here's the basic idea, though, for the three version types we support: submittedVersion is not yet peer-reviewed. acceptedVersion is peer-reviewed, but lacks publisher-specific formatting.  publishedVersion is the version of record.

    CrossrefContributor:
      type: object
      properties:
        authenticated_orcid:
          type: string
          nullable: true
          description: ORCID of the contributor if available.
        family:
          type: string
          description: Family name of the contributor.
        given:
          type: string
          description: Given name of the contributor.
        sequence:
          type: string
          enum: [first, additional]
          nullable: true
          description: Sequence of authorship (e.g., first, additional).

    SearchResult:
      type: object
      properties:
        response:
          $ref: "#/components/schemas/DOISchema"
          description: The full DOI Object for this match.
        score:
          type: number
          format: float
          description: The numeric score used to rank the results.
        snippet:
          type: string
          description: An HTML-formatted string showing how the title matched the query.
  securitySchemes:
    emailAuth:
      type: apiKey
      in: query
      name: email

externalDocs:
  description: Find out more about Unpaywall
  url: https://unpaywall.org/
